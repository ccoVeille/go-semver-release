name: CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.go-semver.outputs.NEW_RELEASE }}
      semver: ${{ steps.go-semver.outputs.SEMVER }}
    steps:
      - uses: actions/checkout@v4.1.4
        with:
          fetch-depth: 0 # Fetches tags

      # Insert your build process and unit tests here

      # Install Go Semver Release
      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: 1.22

      - name: Install Go Semver Release
        run: go install github.com/s0ders/go-semver-release@latest

      # If build and unit tests are green, check if there is a new release
      - name: Go Semver Release
        id: go-semver
        run: go-semver-release local . --release-branch main --tag-prefix v --verbose --dry-run

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build
    # Only run this job if a new release was detected
    if: ${{needs.go-build.outputs.release == 'true'}}
    env:
      # Creates a pre-release tag to tag artifacts before doing more advanced tests
      PRERELEASE_TAG: '${{needs.build.outputs.semver}}-${{ github.sha }}'
      RELEASE_TAG: ${{needs.build.outputs.semver}}
    steps:
      - uses: actions/checkout@v4.1.4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Tag artifact with pre-release tag
      - name: Docker build pre-release
        uses: docker/build-push-action@v5.3.0
        with:
          push: true
          tags: <image_name>:${{ env.PRERELEASE_TAG }}

  integration-tests:
  runs-on: ubuntu-latest
  needs:
    - build
    - docker-build-and-push
  steps:
    # Run your integration tests here

  release-tag:
    runs-on: ubuntu-latest
    needs:
      - go-build
      - docker-build-scan-push
      - integration-tests
    env:
      RELEASE_TAG: ${{needs.go-build.outputs.semver}}
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Git Configuration
        run: |
          git config --global user.email "go-semver-release@ci.com"
          git config --global user.name "Go Semver Release"

      # Once every check are passed, push back the release tag to the remote repository
      - name: Push Tag
        run: |
          git tag --annotate ${{ env.RELEASE_TAG }} --message "${{ env.RELEASE_TAG }}"
          git push origin ${{ env.RELEASE_TAG }}
